Index: API_project/test_shop_project/test_area_ repetition.py
===================================================================
--- API_project/test_shop_project/test_area_ repetition.py	(revision b6b6be206ae31d2faa241376f9eb947d3b0c4d7d)
+++ API_project/test_shop_project/test_area_ repetition.py	(revision b6b6be206ae31d2faa241376f9eb947d3b0c4d7d)
@@ -1,93 +0,0 @@
-# -*- coding: utf-8 -*-
-# @Time : 2021/7/14 18:04
-# @Author : 孟艳红
-# @File : test_area_ repetition.py #地区配置查重
-import openpyxl
-from collections import Counter #导入表格统计模块
-from API_project.Configs.config_API import configuration_file
-HOST = "lxcrm" #设置测试环境 test:测试环境，staging:回归环境，lxcrm:正式环境
-shopDivision = configuration_file(HOST).shopDivision()#实例化店铺地区并返回配置信息
-# print(shopDivision)
-# def test_shop_file(): #文件保存
-#     wb = openpyxl.Workbook()
-#     file = wb.active
-#     file.cell(row=1, column=1).value = "sheng_name"
-#     file.cell(row=1, column=2).value = "sheng_num"
-#     file.cell(row=1, column=3).value = "shi_name"
-#     file.cell(row=1, column=4).value = "shi_num"
-#     file.cell(row=1, column=5).value = "qu_name"
-#     file.cell(row=1, column=6).value = "qu_num"
-#     list_shenglen = len(shopDivision["normal"])
-#     shi_sum = 0
-#     qu_sum = 0
-#     for i in range(list_shenglen):
-#         file.cell(row=(i + 2), column=1).value = shopDivision["normal"][i]["NAME"]
-#         file.cell(row=(i + 2), column=2).value = shopDivision["normal"][i]["NUM"]
-#         list_shilen = len(shopDivision["normal"][i]["children"])
-#         for j in range(list_shilen):
-#             shi_sum += 1
-#             file.cell(row=(shi_sum + 1), column=3).value = shopDivision["normal"][i]["children"][j]["NAME"]
-#             file.cell(row=(shi_sum + 1), column=4).value = shopDivision["normal"][i]["children"][j]["NUM"]
-#             list_qulen = len(shopDivision["normal"][i]["children"][j]["children"])
-#             for q in range(list_qulen):
-#                 qu_sum += 1
-#                 file.cell(row=(qu_sum + 1), column=5).value = shopDivision["normal"][i]["children"][j]["children"][q][
-#                     "NAME"]
-#                 file.cell(row=(qu_sum + 1), column=6).value = shopDivision["normal"][i]["children"][j]["children"][q][
-#                     "NUM"]
-#     wb.save(r"C:/Users/admin/Desktop/店铺地区1.xlsx")
-#     print("保存成功")
-
-def test_shop_search():
-    # print(shopDivision)
-    # print(shopCategory["shopDivision"]["normal"])
-    list_shenglen = len(shopDivision["normal"])
-    # print(list_shenglen)
-    biaoge_sheng = []
-    for i in range(list_shenglen):
-        pr_name = shopDivision["normal"][i]["NAME"]
-        biaoge_sheng.insert(i,pr_name)
-        list_shilen = len(shopDivision["normal"][i]["children"])
-        # print(pr_name,'\n',list_shilen)
-        biaoge_shi = []
-        for j in range(list_shilen):
-            city_name = shopDivision["normal"][i]["children"][j]["NAME"]
-            biaoge_shi.insert(j,city_name)
-            list_qulen = len(shopDivision["normal"][i]["children"][j]["children"])
-            # print(list_qulen)
-            biaoge_qu = []
-            for q in range(list_qulen):
-                qu_name = shopDivision["normal"][i]["children"][j]["children"][q]["NAME"]
-                biaoge_qu.insert(q,qu_name)
-            # print(biaoge_qu)
-            b_qu = dict(Counter(biaoge_qu))
-            # print(b_qu)
-            b__qu = {key:value for key,value in b_qu.items() if value > 1}
-            # print(b__qu)
-            if b__qu != {}:
-                print(pr_name,city_name)
-                print(b__qu)
-                assert b__qu == {}
-            else:
-                assert b__qu == {}
-        b_shi = dict(Counter(biaoge_shi))
-        # print(b_shi)
-        if [key for key,value in b_shi.items() if value > 1] != []:
-            print([key for key, value in b_shi.items() if value > 1])
-            print(pr_name)
-            assert [key for key,value in b_shi.items() if value > 1] == []
-        else:
-            assert [key for key, value in b_shi.items() if value > 1] == []
-    # print(biaoge_sheng)
-    b_sheng = dict(Counter(biaoge_sheng))
-    # print(b_sheng)
-    if {key:value for key,value in b_sheng.items()if value > 1} != {}:
-        print({key:value for key,value in b_sheng.items()if value > 1})
-        assert {key:value for key,value in b_sheng.items()if value > 1} == {}
-    else:
-        assert {key: value for key, value in b_sheng.items() if value > 1} == {}
-
-if __name__ == '__main__':
-    test_shop_search()
-
-
\ No newline at end of file
Index: API_project/test_shop_project/test_arer_search.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># -*- coding: utf-8 -*-\r# @Time : 2021/7/14 10:55\r# @Author : 孟艳红\r# @File : test_category.py 店铺分类\rimport pytest,time,requests,chardet,json,yaml\rfrom API_project.Configs.shop_API import shop\rfrom API_project.Configs.config_API import configuration_file\r# from data.text import\r# file = open(r\"C:\\Users\\admin\\PycharmProjects\\API_project\\data\\text\\areer.txt\",\"r+\")\r# # file.close()\r# file = file.read().encode('utf-8').decode('utf-8')\r# shopCategory=json.loads(file)\r# print(shopCategory)\r# with open(r\"C:\\Users\\admin\\PycharmProjects\\API_project\\data\\text\\areer.yaml\") as f:\r#     yaml_data = yaml.safe_load(f)\r#     f.close()\r# shopCategory = shopCategor[\"data\"][\"shopDivision\"]\r\rHOST = 'lxcrm' #设置测试环境 test:测试环境，staging:回归环境，lxcrm:正式环境\rshop = shop(HOST) #实例化店铺搜索\rshopCategory = configuration_file(HOST).shopDivision()#实例化店铺地区并返回配置信息\r\rprovince_list = []\rcity_list = []\rdistrict_list = []\rlist_shenglen = len(shopCategory[\"normal\"])\rfor i in range(list_shenglen):\r    province_name = shopCategory[\"normal\"][i][\"NAME\"]\r    province_value = shopCategory[\"normal\"][i][\"NUM\"]\r    province_list.append((province_name,province_value))\r    list_shilen = len(shopCategory[\"normal\"][i][\"children\"])\r    for j in range(list_shilen):\r        city_name = shopCategory[\"normal\"][i][\"children\"][j][\"NAME\"]\r        city_value = shopCategory[\"normal\"][i][\"children\"][j][\"NUM\"]\r        city_list.append((city_name,city_value))\r        list_qulen = len(shopCategory[\"normal\"][i][\"children\"][j][\"children\"])\r        for q in range(list_qulen):\r            district_name = shopCategory[\"normal\"][i][\"children\"][j][\"children\"][q][\"NAME\"]\r            district_value = shopCategory[\"normal\"][i][\"children\"][j][\"children\"][q][\"NUM\"]\r            district_list.append((district_name,district_value))\r\rclass Test_arer:\r    @pytest.mark.parametrize('province_name,province_value',province_list)\r    def test_province(self,province_name,province_value,ES):\r        es_client = ES\r        shopdata = shop.area_province(province_value)\r\r        time.sleep(2.5)\r        if shopdata['error_code'] != 0:\r            print(province_name,province_value)\r            assert shopdata['error_code'] == 0\r        if shopdata['data']['total'] != 0:\r            for i in range(len(shopdata['data']['items'])):\r                response_shop_id = shopdata['data']['items'][i]['id']\r                response_shop_name = shopdata['data']['items'][i]['name']\r                print(province_name, province_value)\r                print(response_shop_name, 'shop_id', response_shop_id)\r                try:\r                    es_result = es_client.get(index=\"shop_info_test_20210823\", id=response_shop_id)['_source']  # 获取es搜索数据内容\r                except:\r                    print(\"ES调用失败\")\r                    # print(\"ESget\",es_result.request.body)\r                    pass\r                else:\r                    assert str(es_result[\"province\"]) == str(province_value)\r        else:\r            print('\\n搜索结果',shopdata)\r            print(province_name, province_value)\r            assert shopdata['data']['total'] != 0\r\r    @pytest.mark.parametrize('city_name,city_value', city_list)\r    def test_city(self,city_name,city_value,ES):#,,\r        print(city_name,city_value)\r        es_client = ES\r        shopdata = shop.area_city(city_value)\r        time.sleep(2.5)\r        if shopdata['error_code'] != 0:\r            print(city_name,city_value)\r            assert shopdata['error_code'] == 0\r        if shopdata['data']['total'] != 0:\r            for i in range(len(shopdata['data']['items'])):\r                response_shop_id = shopdata['data']['items'][i]['id']\r                response_shop_name = shopdata['data']['items'][i]['name']\r                print(city_name,city_value)\r                print(response_shop_name, 'shop_id', response_shop_id)\r                try:\r                    es_result = es_client.get(index=\"shop_info_test\", id=response_shop_id)['_source']  # 获取es搜索数据内容\r                except:\r                    print(\"ES调用失败\")\r                    pass\r                else:\r                    assert str(es_result[\"city\"]) == str(city_value)\r        else:\r            print('\\n搜索结果',shopdata)\r            print(city_name,city_value)\r            assert shopdata['data']['total'] != 0\r\r    @pytest.mark.parametrize('district_name,district_value', district_list)\r    def test_district(self,district_name,district_value,ES):\r        es_client = ES\r        shopdata = shop.area_district(district_value)\r        time.sleep(2.5)\r        if shopdata['error_code'] != 0:\r            print(district_name,district_value)\r            assert shopdata['error_code'] == 0\r        if shopdata['data']['total'] != 0:\r            for i in range(len(shopdata['data']['items'])):\r                response_shop_id = shopdata['data']['items'][i]['id']\r                response_shop_name = shopdata['data']['items'][i]['name']\r                print(district_name,district_value)\r                print(response_shop_name, 'shop_id', response_shop_id)\r                try:\r                    es_result = es_client.get(index=\"shop_info_test\", id=response_shop_id)['_source']  # 获取es搜索数据内容\r                except:\r                    print(\"ES调用失败\")\r                    pass\r                else:\r                    dis_list = es_result[\"district\"]\r                    request_dis = district_value.split(\",\")\r                    len_district = [value for value in request_dis if value in dis_list]\r                    print(len_district)\r                    assert len_district != None\r                    assert len_district != []\r        else:\r            print('\\n搜索结果',shopdata)\r            print(district_name,district_value)\r            assert shopdata['data']['total'] != 0\r\r    def test_p_c_d(self,ES):\r        es_client = ES\r        for i in range(list_shenglen):\r            province_name = shopCategory[\"normal\"][i][\"NAME\"]\r            province_value = shopCategory[\"normal\"][i][\"NUM\"]\r            list_shilen = len(shopCategory[\"normal\"][i][\"children\"])\r            for j in range(list_shilen):\r                city_name = shopCategory[\"normal\"][i][\"children\"][j][\"NAME\"]\r                city_value = shopCategory[\"normal\"][i][\"children\"][j][\"NUM\"]\r                list_qulen = len(shopCategory[\"normal\"][i][\"children\"][j][\"children\"])\r                for q in range(list_qulen):\r                    district_name = shopCategory[\"normal\"][i][\"children\"][j][\"children\"][q][\"NAME\"]\r                    district_value = shopCategory[\"normal\"][i][\"children\"][j][\"children\"][q][\"NUM\"]\r                    print(province_name, province_value)\r                    print(city_name, city_value)\r                    print(district_name, district_value)\r                    shopdata = shop.area_district(district_value)\r                    time.sleep(2.5)\r                    if shopdata['error_code'] != 0:\r                        assert shopdata['error_code'] == 0\r                    if shopdata['data']['total'] != 0:\r                        for i in range(len(shopdata['data']['items'])):\r                            response_shop_id = shopdata['data']['items'][i]['id']\r                            response_shop_name = shopdata['data']['items'][i]['name']\r                            print(response_shop_name, 'shop_id', response_shop_id)\r                            try:\r                                es_result = es_client.get(index=\"shop_info_test\", id=response_shop_id)[\r                                    '_source']  # 获取es搜索数据内容\r                            except:\r                                print(\"ES调用失败\")\r                            else:\r                                dis_list = es_result[\"district\"]\r                                es_city = es_result[\"city\"]\r                                es_province = es_result[\"province\"]\r                                request_dis = district_value.split(\",\")\r                                len_district = [value for value in request_dis if value in dis_list]\r                                print(\"ES结果,province:\"+es_province+\"city:\"+es_city+\"district:\"+dis_list)\r                                assert len_district != []\r                                assert str(es_city) == str(city_value)\r                                assert str(es_province) == str(province_value)\r                    else:\r                        print('\\n搜索结果', shopdata)\r                        print(district_name, district_value)\r                        assert shopdata['data']['total'] != 0\r\r\r\r\r
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- API_project/test_shop_project/test_arer_search.py	(revision b6b6be206ae31d2faa241376f9eb947d3b0c4d7d)
+++ API_project/test_shop_project/test_arer_search.py	(date 1630764693719)
@@ -44,7 +44,6 @@
     def test_province(self,province_name,province_value,ES):         es_client = ES         shopdata = shop.area_province(province_value)-         time.sleep(2.5)         if shopdata['error_code'] != 0:             print(province_name,province_value)@@ -173,4 +172,4 @@
   -
\ No newline at end of file
+Index: .idea/home.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n  <component name=\"PackageRequirementsSettings\">\r\n    <option name=\"requirementsPath\" value=\"C:\\Users\\user\\python\\home\\API_project\" />\r\n  </component>\r\n  <component name=\"PyDocumentationSettings\">\r\n    <option name=\"format\" value=\"PLAIN\" />\r\n    <option name=\"myDocStringFormat\" value=\"Plain\" />\r\n  </component>\r\n  <component name=\"TestRunnerService\">\r\n    <option name=\"PROJECT_TEST_RUNNER\" value=\"pytest\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/home.iml	(revision b6b6be206ae31d2faa241376f9eb947d3b0c4d7d)
+++ .idea/home.iml	(date 1630808506181)
@@ -1,7 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$" isTestSource="false" />
+    </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
@@ -11,6 +13,24 @@
   <component name="PyDocumentationSettings">
     <option name="format" value="PLAIN" />
     <option name="myDocStringFormat" value="Plain" />
+  </component>
+  <component name="TemplatesService">
+    <option name="TEMPLATE_FOLDERS">
+      <list>
+        <option value="$MODULE_DIR$/api_practice/data" />
+        <option value="$MODULE_DIR$/api_practice/report" />
+        <option value="$MODULE_DIR$/api_practice/report/tmp" />
+        <option value="$MODULE_DIR$/.idea" />
+        <option value="$MODULE_DIR$/backups" />
+        <option value="$MODULE_DIR$/lixiaoyun/data" />
+        <option value="$MODULE_DIR$/uc-wwj-push/Data" />
+        <option value="$MODULE_DIR$/uc-wwj-push/report" />
+        <option value="$MODULE_DIR$/uc-wwj-push" />
+        <option value="$MODULE_DIR$/UC-wwj-skb-test/Data" />
+        <option value="$MODULE_DIR$/UC-wwj-skb-test/report" />
+        <option value="$MODULE_DIR$/Visitors_identify/Data" />
+      </list>
+    </option>
   </component>
   <component name="TestRunnerService">
     <option name="PROJECT_TEST_RUNNER" value="pytest" />
